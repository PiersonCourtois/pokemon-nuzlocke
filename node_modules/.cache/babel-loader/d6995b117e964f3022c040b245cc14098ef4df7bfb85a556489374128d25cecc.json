{"ast":null,"code":"var _jsxFileName = \"/home/pierson/pokemon-nuzlocke/src/components/Run.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Area from './Area';\nimport { useState } from 'react';\nimport { gameData } from '../area-data.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Run = () => {\n  _s();\n  const [area, setArea] = useState(0);\n  const game = gameData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"run-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require('../type-imgs/icon512.png'),\n        alt: \"\",\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"NuzRun\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"area-container\",\n      children: game.map((data, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"area\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setArea(key),\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roll-container\",\n      children: /*#__PURE__*/_jsxDEV(Area, {\n        currentArea: area\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_s(Run, \"IzfWvVHWmawHLRnxutcE/CfOQg4=\");\n_c = Run;\nexport function setLocal(key, i, str) {\n  // Function to set a data item to local storage. Takes in key, index, and a string to set. \n  var tempData = JSON.parse(localStorage.getItem('userData'));\n  tempData[i][key] = str;\n  localStorage.setItem('userData', JSON.stringify(tempData));\n}\nexport function getLocal(key, i) {\n  // Function to get a data item from local storage. Takes in key and index. Returns data item at [index][key]\n  var tempData = JSON.parse(localStorage.getItem('userData'));\n  return JSON.stringify(tempData[i][key]);\n}\nexport function genPokemon(i, condition, dupes) {\n  // Function to generate a random pokemon from a given list. Takes in index of list. Sets pokemon generated to local storage then returns that generated pokemon\n  let list = gameData[i][condition];\n  let poke = list[Math.floor(Math.random() * list.length)];\n  console.log(dupes);\n  if (!dupes) while (isDupe(poke)) poke = list[Math.floor(Math.random() * list.length)];\n  setLocal(\"pokemonChosen\", i, poke);\n  setLocal(\"isChosen\", i, \"true\");\n  return poke;\n}\nexport function isDupe(pokemon) {\n  for (let i = 0; i < 30; i++) {\n    let temp = JSON.parse(getLocal(\"pokemonChosen\", i));\n    if (temp === pokemon) return true;\n  }\n  return false;\n}\nexport default Run;\nvar _c;\n$RefreshReg$(_c, \"Run\");","map":{"version":3,"names":["React","Area","useState","gameData","Run","area","setArea","game","require","map","data","key","name","setLocal","i","str","tempData","JSON","parse","localStorage","getItem","setItem","stringify","getLocal","genPokemon","condition","dupes","list","poke","Math","floor","random","length","console","log","isDupe","pokemon","temp"],"sources":["/home/pierson/pokemon-nuzlocke/src/components/Run.js"],"sourcesContent":["\nimport React from 'react';\nimport Area from './Area';\nimport { useState } from 'react';\nimport { gameData } from '../area-data.js';\n\nconst Run = () => {\n    const [area, setArea] = useState(0);\n    const game = gameData;\n    return(\n\n        <div className='run-container'>\n            <div className='header'>\n                <img src={require('../type-imgs/icon512.png')} alt='' width={100}/>\n                <h1>NuzRun</h1>\n            </div>\n            <div className='area-container'>\n                {game.map((data, key) => {\n                    return (\n                        <div className =\"area\" key={key}>\n                            <button onClick={() => setArea(key)}>{data.name}</button>\n                        </div>\n                    );\n                })}\n            </div>\n            <div className='roll-container'>\n                <Area currentArea = {area}/>\n            </div>\n        </div>\n    );\n}\n\nexport function setLocal(key, i, str) {\n    // Function to set a data item to local storage. Takes in key, index, and a string to set. \n    var tempData = JSON.parse(localStorage.getItem('userData'));\n    tempData[i][key] = str;\n    localStorage.setItem('userData', JSON.stringify(tempData));\n}\n\nexport function getLocal(key, i) {\n    // Function to get a data item from local storage. Takes in key and index. Returns data item at [index][key]\n    var tempData = JSON.parse(localStorage.getItem('userData'));\n    return JSON.stringify(tempData[i][key]);\n}\n\nexport function genPokemon(i, condition, dupes) {\n    // Function to generate a random pokemon from a given list. Takes in index of list. Sets pokemon generated to local storage then returns that generated pokemon\n    let list = gameData[i][condition];\n    let poke = list[Math.floor(Math.random() * list.length)];\n    console.log(dupes);\n    if(!dupes) \n        while(isDupe(poke)) \n            poke = list[Math.floor(Math.random() * list.length)]; \n    \n    setLocal(\"pokemonChosen\", i, poke);\n    setLocal(\"isChosen\", i, \"true\");\n    return poke;\n  }\n\nexport function isDupe(pokemon) {\n    for(let i = 0; i < 30; i++) {\n        let temp = JSON.parse(getLocal(\"pokemonChosen\", i));\n        if(temp === pokemon)\n            return true;\n    }\n    return false;\n}\n\nexport default Run;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}